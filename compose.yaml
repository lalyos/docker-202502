name: ${ENV:-dev}
services:
  adminer:
    image: adminer
    ports:
    - 8080
    networks:
    - default
    - traefik
  www:
    image: nginx
    ports:
    - 80
    networks:
    - default
    - traefik
    volumes:
    - www:/usr/share/nginx/html
    # deploy:
    #   replicas: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 1s
      retries: 0
  db:
    image: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: s3cr3t
    volumes:
    - etlapdb:/var/lib/mysql
    - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 3s
      retries: 3

  generator:
    build: 
      context: generator
      platforms:
      - "linux/amd64"
      - "linux/arm64"
      - "linux/arm64/v8"
    image: ttl.sh/generator
    init: true
    environment:
      TITLE: ${TITLE:-Menu [dev]}
      COLOR: ${COLOR:-hotpink}
    depends_on:
      db:
        condition: service_healthy
    volumes:
    -  www:/www
  debug:
    image: alpine
    profiles:
      - debug
    build:
      context: .
      dockerfile_inline: |
        FROM alpine
        RUN apk add bash curl cmd:dig
    init: true
    links:
    - www:web
    - db:db
    command: bash
    tty: true
    stdin_open: true

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080


volumes:
  www:
  etlapdb:

networks:
  default:
    name: ${ENV:-dev}
  traefik:
    external: true